{"version":3,"sources":["Assets/images/lion.png","Core/Utils.ts","Core/piano/actions.ts","Hooks/usePianoKey.ts","Core/Piano.ts","Containers/piano/Key.tsx","Containers/PianoKyes.tsx","Containers/PianoConfig.tsx","Components/Lion.tsx","Components/LionConainer.tsx","Components/Button.tsx","Containers/PianoScalePractice.tsx","App/App.tsx","serviceWorker.ts","Core/piano/reducer.ts","Core/Store.ts","index.tsx"],"names":["module","exports","Utils","start","this","sacleWhite","map","v","list","forEach","push","sacleBlack","includes","end","makeScaleAll","i","getKeyTones","newList","tone","isValue","startTone","key","result","keyObj","hasOwnProperty","Object","keys","find","target","targetMinusShap","replace","parentTone","document","querySelector","offsetLeft","positionStart","a","w","s","e","d","f","t","g","y","h","u","j","k","pianoTrigger","type","payload","pianoRelese","setConfig","name","value","usePianoKey","tones","useSelector","state","piano","dispatch","useDispatch","autoDown","releaseSpeed","setTimeout","setIntervali","callback","time","isImmi","setInterval","downKey","upKey","triggerAttackRelease","tempo","speed","Array","isArray","timeFunc","rTone","pop","clearInterval","synth","Tone","urls","A0","C1","A1","C2","A2","C3","A3","C4","A4","C5","A5","C6","A6","C7","A7","C8","release","baseUrl","toDestination","Piano","note","duration","velocity","Key","isActive","onMouseDown","onMouseUp","isPrintTone","config","isTonePrint","isKeyboradPrint","useState","blackPosition","setBlackPosition","isPrime","isHavePrime","useEffect","getBlackPosition","className","trigger","style","left","data-tone","getKeyByTone","PianoKyes","getTone","getKeyToTone","index","findIndex","toneObj","handleKeyMouseDown","handleKeyMouseUp","onKeyPress","event","onKeyUp","tabIndex","item","PianoConfig","isViewLionCheckBox","isViewLion","id","checked","onChange","htmlFor","Logo","styled","img","Lion","size","src","LionPng","SHADOW_HEIGHT","Math","round","bounce","keyframes","grow","Container","div","LogoWrapper","Shadow","LionContainer","Button","text","onClick","PianoScalePractice","getScale5","App","Boolean","window","location","hostname","match","initState","initTones","pianoReducer","actions","newTones","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cf985024.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lion.210fda4e.png\";","import { IKeyTone } from \"Interface/IKeyTone\";\nimport { IToneKeyboard } from \"Interface/IToneKeyboard\";\nimport { Tone } from \"tone/build/esm/core/Tone\";\ninterface IKeyValue {\n  [key: string]: IKeyTone;\n}\nexport class Utils {\n  static sacleWhite = [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"];\n  static sacleBlack = [\"C\", \"D\", \"F\", \"G\", \"A\"];\n\n  static makeScale(start: number): IKeyTone[] {\n    return this.sacleWhite.map((v) => (v + start) as IKeyTone);\n  }\n  static makeScaleAll(start: number): IKeyTone[] {\n    let list: IKeyTone[] = [];\n    this.sacleWhite.forEach((v) => {\n      list.push((v + start) as IKeyTone);\n      if (this.sacleBlack.includes(v)) {\n        list.push((v + \"#\" + start) as IKeyTone);\n      }\n    });\n    return list;\n  }\n\n  static getKeyTones(start: number, end: number = 0): IKeyTone[] {\n    if (end === 0) {\n      return this.makeScaleAll(start);\n    }\n\n    let list: IKeyTone[] = [];\n    for (let i = start; i <= end; i++) {\n      // list.push(\"C1\");\n      list = [...list, ...this.makeScaleAll(i)];\n    }\n    return list;\n  }\n\n  static initTones(start: number, end: number = 0): IToneKeyboard[] {\n    const list = Utils.getKeyTones(start, end);\n\n    const newList: IToneKeyboard[] = [];\n    list.forEach((v) => {\n      newList.push({\n        tone: v,\n        isValue: false,\n      });\n    });\n\n    return newList;\n  }\n\n  static getScale5(startTone: IKeyTone): IKeyTone[] {\n    const a: IKeyTone[] = [\n      \"C3\",\n      \"D3\",\n      \"E3\",\n      \"F3\",\n      \"G3\",\n      \"F3\",\n      \"E3\",\n      \"D3\",\n      \"C3\",\n    ];\n\n    return a;\n  }\n\n  static keyObj: IKeyValue = {\n    a: \"C3\" as IKeyTone,\n    w: \"C#3\" as IKeyTone,\n    s: \"D3\" as IKeyTone,\n    e: \"D#3\" as IKeyTone,\n    d: \"E3\" as IKeyTone,\n    f: \"F3\" as IKeyTone,\n    t: \"F#3\" as IKeyTone,\n    g: \"G3\" as IKeyTone,\n    y: \"G#3\" as IKeyTone,\n    h: \"A3\" as IKeyTone,\n    u: \"A#3\" as IKeyTone,\n    j: \"B3\" as IKeyTone,\n    i: \"B#3\" as IKeyTone,\n    k: \"C4\" as IKeyTone,\n  };\n\n  static getKeyToTone(key: string): IKeyTone | undefined {\n    let result: IKeyTone | undefined;\n\n    if (Utils.keyObj.hasOwnProperty(key)) {\n      result = Utils.keyObj[key];\n    }\n    return result;\n  }\n\n  static getKeyByTone(tone: IKeyTone): string {\n    const result = Object.keys(this.keyObj).find(\n      (v) => this.keyObj[v] === tone\n    );\n    return result as string;\n  }\n\n  static positionStart = 30;\n  static getBlackPosition(target: IKeyTone): number {\n    if (!target.includes(\"#\")) {\n      return 0;\n    }\n\n    const targetMinusShap = target.replace(\"#\", \"\");\n    const parentTone = document.querySelector<HTMLDivElement>(\n      `[data-tone=${targetMinusShap}]`\n    );\n    const parnetToneX = (parentTone?.offsetLeft || 0) + this.positionStart;\n\n    return parnetToneX;\n  }\n\n  static isPrime(tone: IKeyTone): boolean {\n    if (tone.includes(\"E\") || tone.includes(\"B\")) {\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { IKeyTone } from \"Interface/IKeyTone\";\nimport { TPianoConfigValue } from \"Interface/IPianoConfig\";\n\nexport const PIANO_TRIGGER = \"PIANO_TRIGGER\" as const;\nexport const PIANO_RELEASE = \"PIANO_RELEASE\" as const;\nexport const SET_PRINT_TONE = \"SET_PRINT_TONE\" as const;\nexport const SET_CONFIG = \"SET_CONFIG\" as const;\n\nexport const pianoTrigger = (tone: IKeyTone) => {\n  return {\n    type: PIANO_TRIGGER,\n    payload: tone,\n  };\n};\n\nexport const pianoRelese = (tone: IKeyTone) => {\n  return {\n    type: PIANO_RELEASE,\n    payload: tone,\n  };\n};\n\nexport const setPrintTone = (isTone: boolean) => {\n  return {\n    type: SET_PRINT_TONE,\n    payload: isTone,\n  };\n};\n\nexport const setConfig = (name: string, value: TPianoConfigValue) => {\n  return {\n    type: SET_CONFIG,\n    payload: {\n      name,\n      value,\n    },\n  };\n};\n\nexport type PianoActions =\n  | ReturnType<typeof pianoTrigger>\n  | ReturnType<typeof pianoRelese>\n  | ReturnType<typeof setPrintTone>\n  | ReturnType<typeof setConfig>;\n","import { pianoRelese, pianoTrigger } from \"Core/piano/actions\";\nimport { RootState } from \"Core/Store\";\nimport { IKeyTone } from \"Interface/IKeyTone\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst usePianoKey = () => {\n  const tones = useSelector((state: RootState) => state.piano.tones);\n  const dispatch = useDispatch();\n\n  const downKey = (tone: IKeyTone): void => {\n    dispatch(pianoTrigger(tone));\n  };\n  const autoDown = (tone: IKeyTone, releaseSpeed: number = 100): void => {\n    dispatch(pianoTrigger(tone));\n    setTimeout(() => {\n      dispatch(pianoRelese(tone));\n    }, releaseSpeed);\n  };\n\n  const setIntervali = (\n    callback: () => void,\n    time: number,\n    isImmi: boolean = false\n  ) => {\n    if (isImmi) {\n      callback();\n    }\n    return setInterval(callback, time);\n  };\n\n  const upKey = (tone: IKeyTone) => {\n    dispatch(pianoRelese(tone));\n  };\n  const triggerAttackRelease = (\n    tone: IKeyTone | IKeyTone[],\n    tempo: String,\n    speed: number = 100\n  ) => {\n    if (Array.isArray(tone)) {\n      const tones = [...tone];\n\n      const timeFunc = setIntervali(\n        () => {\n          const rTone = tones.pop();\n          if (rTone) {\n            autoDown(rTone);\n          } else {\n            clearInterval(timeFunc);\n          }\n        },\n        speed,\n        true\n      );\n    } else {\n      autoDown(tone, speed);\n    }\n  };\n\n  return { tones, downKey, upKey, autoDown, triggerAttackRelease };\n};\n\nexport default usePianoKey;\n","import { IKeyTone } from \"Interface/IKeyTone\";\nimport * as Tone from \"tone\";\nimport { Frequency, NormalRange, Time } from \"tone/build/esm/core/type/Units\";\n// const synth = new Tone.Synth().toDestination();\n// const synth = new Tone.Synth();\n// const synth = new Tone.Synth({\n//   oscillator: {\n//     type: \"sine\",\n//   },\n// });\n\nconst synth = new Tone.Sampler({\n  urls: {\n    A0: \"A0.mp3\",\n    C1: \"C1.mp3\",\n    \"D#1\": \"Ds1.mp3\",\n    \"F#1\": \"Fs1.mp3\",\n    A1: \"A1.mp3\",\n    C2: \"C2.mp3\",\n    \"D#2\": \"Ds2.mp3\",\n    \"F#2\": \"Fs2.mp3\",\n    A2: \"A2.mp3\",\n    C3: \"C3.mp3\",\n    \"D#3\": \"Ds3.mp3\",\n    \"F#3\": \"Fs3.mp3\",\n    A3: \"A3.mp3\",\n    C4: \"C4.mp3\",\n    \"D#4\": \"Ds4.mp3\",\n    \"F#4\": \"Fs4.mp3\",\n    A4: \"A4.mp3\",\n    C5: \"C5.mp3\",\n    \"D#5\": \"Ds5.mp3\",\n    \"F#5\": \"Fs5.mp3\",\n    A5: \"A5.mp3\",\n    C6: \"C6.mp3\",\n    \"D#6\": \"Ds6.mp3\",\n    \"F#6\": \"Fs6.mp3\",\n    A6: \"A6.mp3\",\n    C7: \"C7.mp3\",\n    \"D#7\": \"Ds7.mp3\",\n    \"F#7\": \"Fs7.mp3\",\n    A7: \"A7.mp3\",\n    C8: \"C8.mp3\",\n  },\n  release: 1,\n  baseUrl: \"https://tonejs.github.io/audio/salamander/\",\n}).toDestination();\n\nexport class Piano {\n  static trigger(tone: IKeyTone) {\n    synth.triggerAttackRelease(tone, \"8n\");\n  }\n\n  static triggerAttackRelease(\n    note: Frequency,\n    duration: Time,\n    time?: Time,\n    velocity?: NormalRange\n  ) {}\n}\n","import React, { useEffect, useState } from \"react\";\nimport { IKeyTone } from \"Interface/IKeyTone\";\nimport { Utils } from \"Core/Utils\";\nimport { Piano } from \"Core/Piano\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"Core/Store\";\n\n// const now = Tone.now();\n\ninterface IProps {\n  tone: IKeyTone;\n  isActive: boolean;\n  onMouseDown: (tone: IKeyTone) => void;\n  onMouseUp: (tone: IKeyTone) => void;\n}\nconst Key = ({ tone, isActive, onMouseDown, onMouseUp }: IProps) => {\n  const isPrintTone = useSelector(\n    (state: RootState) => state.piano.config.isTonePrint\n  );\n  const isKeyboradPrint = useSelector(\n    (state: RootState) => state.piano.config.isKeyboradPrint\n  );\n  const [blackPosition, setBlackPosition] = useState<number>();\n  const [isHavePrime] = useState<boolean>(Utils.isPrime(tone));\n\n  useEffect(() => {\n    setBlackPosition(Utils.getBlackPosition(tone));\n  }, [tone]);\n\n  const className = `key ${tone.includes(\"#\") ? \"black\" : \"white\"} ${\n    isHavePrime ? \"prime\" : \"\"\n  }\n  ${isActive ? \"active\" : \"\"}`;\n\n  useEffect(() => {\n    if (isActive) {\n      Piano.trigger(tone);\n    } else {\n    }\n  }, [isActive]);\n\n  return (\n    <div\n      className={className}\n      style={{ left: blackPosition }}\n      onMouseDown={() => onMouseDown(tone)}\n      onMouseUp={() => onMouseUp(tone)}\n      data-tone={tone}\n    >\n      <div className=\"label\">\n        {isKeyboradPrint && (\n          <div className=\"key__key_name\">{Utils.getKeyByTone(tone)}</div>\n        )}\n        {isPrintTone && <div className=\"key__tone_name\">{tone}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Key;\n","import { pianoRelese, pianoTrigger } from \"Core/piano/actions\";\nimport { RootState } from \"Core/Store\";\nimport { Utils } from \"Core/Utils\";\nimport usePianoKey from \"Hooks/usePianoKey\";\nimport { IKeyTone } from \"Interface/IKeyTone\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Key from \"./piano/Key\";\n\ninterface IProps {}\nconst PianoKyes = ({}: IProps) => {\n  const { tones, downKey, upKey } = usePianoKey();\n  // const tones = useSelector((state: RootState) => state.piano.tones);\n  // const dispatch = useDispatch();\n\n  // const pressKey = (tone: IKeyTone) => {\n  //   dispatch(pianoTrigger(tone));\n  // };\n\n  // const upKey = (tone: IKeyTone) => {\n  //   dispatch(pianoRelese(tone));\n  // };\n\n  const getTone = (key: string): IKeyTone | null => {\n    let value = Utils.getKeyToTone(key);\n    if (!value) return null;\n    const index = tones?.findIndex((v) => {\n      return v.tone === value;\n    });\n    const toneObj = tones[index];\n    if (!toneObj) return null;\n\n    return toneObj.tone;\n  };\n\n  // 키보드\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const tone = getTone(event.key);\n    if (!tone) return;\n    downKey(tone);\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const tone = getTone(event.key);\n    if (!tone) return;\n    upKey(tone);\n  };\n\n  // 마우스\n  const handleKeyMouseDown = (tone: IKeyTone) => {\n    downKey(tone);\n  };\n  const handleKeyMouseUp = (tone: IKeyTone) => {\n    upKey(tone);\n  };\n\n  return (\n    <div\n      className=\"piano-kyes\"\n      onKeyPress={handleKeyDown}\n      onKeyUp={handleKeyUp}\n      tabIndex={0}\n    >\n      <div className=\"piano-kyes__whites\">\n        {tones &&\n          tones.map((item) => {\n            return (\n              <Key\n                key={item.tone}\n                tone={item.tone}\n                onMouseDown={handleKeyMouseDown}\n                onMouseUp={handleKeyMouseUp}\n                isActive={item.isValue}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default PianoKyes;\n","import { setConfig, setPrintTone } from \"Core/piano/actions\";\nimport { RootState } from \"Core/Store\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst PianoConfig = () => {\n  const dispatch = useDispatch();\n\n  const isPrintTone = useSelector(\n    (state: RootState) => state.piano.config.isTonePrint\n  );\n  const handleIsPrintCheckboxChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { checked } = event.target;\n    dispatch(setConfig(\"isTonePrint\", checked));\n  };\n\n  const isKeyboradPrint = useSelector(\n    (state: RootState) => state.piano.config.isKeyboradPrint\n  );\n  const isViewLionCheckBox = useSelector(\n    (state: RootState) => state.piano.config.isViewLion\n  );\n\n  const handleIsKeyboardPrintCheckboxChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const { checked } = event.target;\n    dispatch(setConfig(\"isKeyboradPrint\", checked));\n  };\n  return (\n    <div className=\"piano_config\">\n      <ul>\n        <li>\n          <input\n            type=\"checkbox\"\n            id=\"isPrintBox\"\n            checked={isPrintTone}\n            onChange={handleIsPrintCheckboxChange}\n          />\n          <label htmlFor=\"isPrintBox\">음계 보이기</label>\n        </li>\n        <li>\n          <input\n            type=\"checkbox\"\n            id=\"isKeyboardPrintCheckBox\"\n            checked={isKeyboradPrint}\n            onChange={handleIsKeyboardPrintCheckboxChange}\n          />\n          <label htmlFor=\"isKeyboardPrintCheckBox\">키보드 보이기</label>\n        </li>\n        <li>\n          <input\n            type=\"checkbox\"\n            id=\"isViewLionCheckBox\"\n            checked={isViewLionCheckBox}\n            onChange={(event) =>\n              dispatch(setConfig(\"isViewLion\", event.target.checked))\n            }\n          />\n          <label htmlFor=\"isViewLionCheckBox\">라이언 보이기</label>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default PianoConfig;\n","import React from \"react\";\nimport LionPng from \"Assets/images/lion.png\";\nimport styled from \"styled-components\";\n\nconst Logo = styled.img`\n  width: 100%;\n`;\nexport interface ILionProps {\n  className: string;\n  size: string;\n}\nconst Lion = ({ className, size }: ILionProps) => {\n  return (\n    <div className={className}>\n      <Logo src={LionPng} />\n    </div>\n  );\n};\n\nexport default Lion;\n","import { RootState } from \"Core/Store\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled, { keyframes } from \"styled-components\";\nimport Lion, { ILionProps } from \"./Lion\";\n\nconst LOGO_SIZE = \"60px\";\nconst DURATION = \"1s\";\nconst SHADOW_HEIGHT = `${Math.round(48 / 5)}px`;\nconst DROP_HEIGHT = \"200px\";\nconst OFFSET = \"40px\";\n\nconst bounce = keyframes`\n  0%   {transform: translatey(0px);}\n  20%  {transform: translatey(-100px);}\n  25%  {transform: translatey(-110px);}\n  80%  {transform: translatey(0px);}\n  82%  {transform: translatey(-5px);}\n  90%  {transform: translatey(0px);}\n  92%  {transform: translatey(-3px);}\n  100% {transform: translatey(0);}\n`;\n\nconst grow = keyframes`\n  from {\n    transform: scale(0.2, 0.5);\n  }\n  to {\n    transform: scale(1.5, 0.8);\n  }\n`;\n\nconst Container = styled.div`\n  width: ${LOGO_SIZE};\n  min-width: ${LOGO_SIZE};\n  background-color: black;\n  position: relative;\n`;\n\nconst LogoWrapper = styled(Lion)<ILionProps>`\n  width: ${LOGO_SIZE};\n  position: absolute;\n  bottom: 10px;\n  animation-name: ${bounce};\n  animation-duration: ${DURATION};\n  animation-direction: alternate;\n  animation-timing-function: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n  // animation-iteration-count: unset;\n`;\n\nconst Shadow = styled.div`\n  width: ${LOGO_SIZE};\n  height: ${SHADOW_HEIGHT};\n  background: radial-gradient(\n    50% 50%,\n    rgba(150, 150, 150, 1),\n    rgba(150, 150, 150, 0.05)\n  );\n  position: absolute;\n  top: calc(${OFFSET} + ${DROP_HEIGHT} + ${LOGO_SIZE} - 1.5 * ${SHADOW_HEIGHT});\n  left: calc(50% - ${LOGO_SIZE} / 2);\n  // animation-name: ${grow};\n  animation-duration: ${DURATION};\n  animation-direction: alternate;\n  animation-timing-function: cubic-bezier(0.95, 0.05, 0.795, 0.035);\n  animation-iteration-count: infinite;\n`;\n\nfunction LionContainer() {\n  const isViewLion = useSelector(\n    (state: RootState) => state.piano.config.isViewLion\n  );\n  return (\n    <Container className={isViewLion ? \"\" : \"none\"}>\n      <LogoWrapper className={\"lion\"} size={LOGO_SIZE} />\n      <Shadow />\n    </Container>\n  );\n}\n\nexport default LionContainer;\n","import React from \"react\";\n\ninterface IProps {\n  text: string;\n  onClick: () => void;\n}\nconst Button = ({ text, onClick }: IProps) => {\n  return (\n    <button className={`mini`} onClick={onClick}>\n      <span className=\"text\">{text}</span>\n      <div className=\"content\"></div>\n    </button>\n  );\n};\n\nexport default Button;\n","import Button from \"Components/Button\";\nimport { Utils } from \"Core/Utils\";\nimport usePianoKey from \"Hooks/usePianoKey\";\nimport React from \"react\";\n\nconst PianoScalePractice = () => {\n  const { triggerAttackRelease } = usePianoKey();\n  const handleScale = () => {\n    const list = Utils.getScale5(\"C3\");\n    triggerAttackRelease(list, \"8n\", 500);\n  };\n  return (\n    <div className=\"piano_scale_container\">\n      <Button text=\"C Scale\" onClick={handleScale} />\n    </div>\n  );\n};\n\nexport default PianoScalePractice;\n","import React from \"react\";\nimport PianoKyes from \"Containers/PianoKyes\";\nimport PianoConfig from \"Containers/PianoConfig\";\nimport LionContainer from \"Components/LionConainer\";\nimport PianoScalePractice from \"Containers/PianoScalePractice\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"top-wapper\">\n          <LionContainer />\n          <PianoKyes />\n        </div>\n        <PianoConfig />\n        <PianoScalePractice />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { Utils } from \"Core/Utils\";\nimport { IPianoConfig } from \"Interface/IPianoConfig\";\nimport { IToneKeyboard } from \"Interface/IToneKeyboard\";\nimport {\n  PianoActions,\n  PIANO_RELEASE,\n  PIANO_TRIGGER,\n  SET_CONFIG,\n  SET_PRINT_TONE,\n} from \"./actions\";\n\ninterface IState {\n  tones: IToneKeyboard[];\n  config: IPianoConfig;\n}\n\nconst temp = Utils.initTones(3, 4);\nconst initState: IState = {\n  tones: temp,\n  config: {\n    isTonePrint: true,\n    isKeyboradPrint: false,\n    isViewLion: false,\n  },\n};\n\nconst pianoReducer = (state: IState = initState, actions: PianoActions) => {\n  switch (actions.type) {\n    case PIANO_TRIGGER:\n      const tone = actions.payload;\n      const index = state.tones.findIndex((v) => v.tone === tone);\n      const newTones = [...state.tones];\n      newTones[index].isValue = true;\n      return {\n        ...state,\n        tones: [...newTones],\n      };\n    case PIANO_RELEASE: {\n      const tone = actions.payload;\n      const index = state.tones.findIndex((v) => v.tone === tone);\n      const newTones = [...state.tones];\n      newTones[index].isValue = false;\n      return {\n        ...state,\n        tones: [...newTones],\n      };\n    }\n    case SET_PRINT_TONE:\n      return {\n        ...state,\n        isPrintTone: actions.payload,\n      };\n    case SET_CONFIG:\n      return {\n        ...state,\n        config: {\n          ...state.config,\n          [actions.payload.name]: actions.payload.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pianoReducer;\n","import pianoReducer from \"Core/piano/reducer\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nconst rootReducer = combineReducers({ piano: pianoReducer });\nlet store: any;\n\n// 추후 디버거 생성\nstore = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App/App\";\nimport \"styles/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"Core/Store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}